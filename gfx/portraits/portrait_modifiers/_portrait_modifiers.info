# The choice is made based on a weighted random or a maximal weight depending on selection_behavior,
# but the first weight that evaluates to >= 100 will be automatically chosen when using both options

my_group = {									# Each group will select one item. If no item has a weight > 0 no item will be selected
	
	usage = customization/game/both/none		# Sets whether this modifier group can be used only by game logic (e.g. prison bars), only customization (e.g. customazible hair), both or none. Both by default
	interface_position = 2						# Where in the barbershop should this set appear. Higher positions will be listed after the lower ones (multiple sets can have the same value, but then their relative order is not specified). 0 by default.
	selection_behavior = weighted_random/max	# Sets whether it's the maximum weight which is selected or a weighted random when selecting a modifier to use. In both cases, the first weight >= 100 will be seleted if there is any. weighted_random by default
	fallback = ...								# If all weights are zero, this fallback modifier will be chosen
	
	item_0 = {									# Each item has a list of dna_modifiers and weight
		
		usage = customization/game/both			# Sets whether this modifier can be used only by game logic (e.g. prison bars), only customization (e.g. customazible hair) or both. Both by default
		is_valid_custom = ...					# A trigger that says whether this modifier can currently be used for customization (on top of usage). Evaluated in the character's scope.
		outfit_tags = { tag1 tag2 ... }			# Outfit tags for this modifier:
												# The modifier is valid if it has an outfit tag matching the highest priority tag specified in the event found in the whole portrait modifier group (if any outfit tag is specified).
												# Portrait modifiers matching any of the event outfit tags (if specified) will always be valid and
												# have their weight at least equal to 1 even when their weight evaluates to < 1.
		require_outfit_tags = yes				# If this is set, the modifier will only be valid to consider if the portrait outfit tags from the event
												# contain any of the modifiers' outfit tags and won't be picked if no portrait event tags are specified.
		ignore_outfit_tags = yes				# If this is set, the modifier doesn't care whether any outfit tags are set or not (good for e.g. the prison bars)
		
		dna_modifiers = {						# The modifiers that will be applied to the portrait if this item is selected
			
			morph = {
				#mode = add						# add this as an extra gene
				#mode = replace 				# overwrite this gene in the dna with the specified template and value
				#mode = modify					# modify this gene in the dna. if the template matches the gene in the dna (or template is left empty), value will be added to the dna-gene's strength
				#mode = modify_multiply			# modify this gene in the dna. If the template matches the gene in the dna (or template is left empty), the dna-gene's strength will be multiplied by the value
				mode = replace
				
				gene = face
				template = fat_face
				value = 1.0
			}
			color = {
				gene = hair_color
				#mode = add						# not supported for color genes
				#mode = replace					# overwrite this gene with palette coordinates specified here
				#mode = modify					# adds x and y to the dna-gene's values
				#mode = modify_multiply			# not supported for color genes
				mode = modify
				
				x = 0.1
				y = -0.1
			}
			accessory = {
				#mode = add						# add this as an extra gene
				#mode = replace 				# overwrite this gene in the dna with the specified template and value
				#mode = modify					# modify this gene in the dna. if the template matches the gene in the dna (or template is left empty), value will be added to the dna-gene's strength
				#mode = modify_multiply			# modify this gene in the dna. If the template matches the gene in the dna (or template is left empty), the dna-gene's strength will be multiplied by the value
				mode = add
				
				gene = headgear
				template = cool_people
				value = 0.75
			}
			
		}
		
		weight = {								# Calculate the weight
			
			base = 1							# Final weigth calculation :
												#	weight = base
												#	for each modifier
												#		weight *= modifier factor
												#		weight += modifier add
			modifier = {
				add = 10
				has_culture = viking
			}
			modifier = {
				factor = 0
				has_trait = dislikes_items
			}
			
		}
		
	}
	
	item_1 = { ... }
	
	add_accessory_modifiers = {					# Will populate this portrait modifier set with modifiers for all variants of the specified accessory template.
												# Useful for customization when we want to select a specific variant from the template.
		gene = beards
		template = all_beards
	}
	
}

example = {
	cool_kids = {
		dna_modifiers = {
			accessory = {
				mode = replace
				gene = headgear
				template = cool_people
				value = 0.75
			}
		}	
		weight = {
			base = 1
			modifier = {
				factor = 0
				is_adult = yes
			}
		}
	}
}

lowlands_clothes = {
	
	usage = game
	selection_behavior = weighted_random
	fallback = no_dutch_clothes
	
	no_dutch_clothes = {
		
		dna_modifiers = {
			accessory = {
				mode = add
				gene = outfits
				template = no_outfit
				range = { 0 1 } # For the randomness to work correctly
			}
			accessory = {
				mode = add
				gene = gene_nudity
				template = hide_nudity
				range = { 0 1 } # For the randomness to work correctly
			}
		}
		
		#outfit_tags = { no_clothes }
		
		weight = {
			base = 0
			modifier = {
				add = 5000
				should_be_fully_naked_portrait_trigger = yes
			}
		}
		
	}
	
	dutch_royal_clothes = {
		
		dna_modifiers = {
			
			# outfits
			accessory = {
				mode = replace
				gene = outfits
				#template = all_outfits
				template = no_outfit
				#template = african_outfits
				#template = arabic_outfits
				#template = arabic_upper_outfits
				#template = chinese_imperial_outfits
				#template = chinese_court_outfits
				#template = chinese_common_outfits
				#template = chinese_low_outfits
				#template = ethiopian_outfits
				#template = european_common_outfits
				#template = european_royal_outfits
				#template = european_working_class_outfits
				#template = indian_common_outfits
				#template = indian_high_outfits
				#template = central_asian_outfits
				#template = japanese_imperial_outfits
				#template = japanese_common_outfits
				#template = japanese_low_outfits
				#template = korean_imperial_outfits
				#template = korean_common_outfits
				#template = korean_low_outfits
				#template = siamese_royal_outfits
				#template = siamese_outfits
				#template = polynesian_outfits
				#template = circumpolar_outfits
				#template = native_american_outfits_north
				#template = native_american_outfits
				#template = semitic_upper_outfits
				#template = peasant_outfits
				#template = peasant_outfits_02
				#template = christian_outfits
				#template = pope_outfits
				#template = slavic_outfits
				#template = south_american_outfits
				#template = african_outfits_politician
				range = { 0.0 1.0 }
			}
			
			# uniformjas
            accessory = {
                mode = replace
                gene = coats
                #template = all_coats
                template = no_coat
                #template = prussian_coats
                #template = arabic_coats
                #template = european_coats
                #template = american_coats
                #template = british_coats
                #template = french_coats
                #template = american_confederate_coats
                range = { 0 1 }
            }
			accessory = {
				mode = add
				gene = dutch_coats
				#template = no_coat
				template = dutch_coats
				range = { 0.0 0.1 }
			}
			
			# jassen
            accessory = {
                mode = replace
                gene = civilian_coats
                #template = all_civilian_coats
                template = no_civilian_coat
                #template = european_civilian_coats
                range = { 0 1 }
            }
			
			# epaulettes
			accessory = {
				mode = replace
				gene = epaulettes
				#template = all_epaulettes
				#template = no_epaulette
				template = prussian_epaulettes
				#range = { 0.5 0.6 }
				range = { 0.0 1.0 }
			}
			
			# riem
			accessory = {
				mode = replace
				gene = belts
				#template = all_belts
				#template = no_belt
				template = generic_belts
				#template = japanese_belts
				range = { 0.0 0.5 }
			}
			
			# vesten
			accessory = {
				mode = replace
				gene = waistcoats
				#template = all_waistcoats
				template = no_waistcoat
				#template = south_american
				#template = european_waistcoats
				range = { 0 1 }
			}
			
			# sjerp
			accessory = {
				mode = replace
				gene = sashes
				#template = all_sashes
				template = no_sash
			    #template = prussian_sashes
				range = { 0.0 1.0 }
			}
			#accessory = {
			#	mode = add
			#	gene = dutch_sash
			#	#template = no_sash
			#	template = orange_sashes
			#	range = { 0.0 1.0 }
			#}
			
			# medailles
			accessory = {
				mode = replace
				gene = medals
				template = all_medals
				#template = no_medals
				#template = generic_medals
				#template = prussian_medals
				range = { 0 1 }
			}
			
			# tressen
			accessory = {
				mode = add
				gene = aiguillettes
				template = all_aiguillettes
				#template = no_aiguillettes
				range = { 0 0.5 }
			}
			
			# hermelijnen mantel
			accessory = {
				mode = add
				gene = top_layer
				#template = all_top_layers
				#template = no_top_layer
				#template = ethiopian_top_layer
				template = european_top_layer
				#template = indian_top_layer
				#template = native_american_top_layer
				#template = japanese_top_layer
				range = { 0 1 }
			}
			
			# broek
			accessory = {
				mode = add
				gene = legwear
				#template = all_legwear
				#template = no_legwear
				template = european_legwear
				#template = peasants_legwear
				#template = native_american_legwear
				#template = slavic_legwear
				#template = polynesian_legwear
				#template = circumpolar_legwear
				#template = south_american_legwear
				#template = japanese_legwear
				#template = peasants_legwear_02
				#template = european_legwear_colors
				range = { 0 1 }
			}
			
			# kettingen
			accessory = {
				mode = add
				gene = necklaces
				#template = all_necklaces
				template = no_necklace
				#template = african_necklaces
				#template = indian_necklaces
				#template = polynesian_necklaces
				#template = south_american_necklaces
				#template = chinese_necklaces
				range = { 0 1 }
			}
			
			# hemden
			accessory = {
				mode = replace
				gene = shirt
				#template = all_shirts
				template = no_shirts
				#template = european_shirt
				#template = working_class_shirt
				range = { 0 1 }
			}
			
		}
		weight = {
			base = 0
			modifier = {
				add = 5000
				dutch_clothes_trigger = yes
				#AND = {
				#    ruler_clothes_trigger = yes
				#    monarchy_clothes_trigger = yes
				#}
			}
		}
	}
	
}
